//함수 리터럴 방식, 3번째 방식이고 가장 많이 사용하는 방식이다.

var getTriangle = function(base, height){
    return base * height / 2;
};//변수에 넣는 방식이라 ;이 붙음
console.log('삼각형 면적: ' + getTriangle(5, 2));

/*
이러한 함수 리터럴 방식은 함수 리터럴을 변수에 넣거나 다른 함수의 인자로 주거나 반환값으로써 함수에 전해주는 것이 가능해서 유용하다.
변수에 함수가 저장되는 방식으로 익명함수이다.
즉 이름없는 함수를 변수에 정의시켜 주는 방식
함수를 직접 정의한다. 

function으로 함수를 직접 정의하는 방식과의 차이점은 
함수 이름을 직접 정의하고 선언하지만
리터럴 방식은 이름없는 함수를 만든 후에 변수 에 대입한다. 그래서 익명함수라고도 함.

단 var a = function k(b){
    return b;
};
에서
함수의 이름을 정의한 리터럴방식에서는
a(1); 이나 k(1);이나 동일하게 작동한다.
*/